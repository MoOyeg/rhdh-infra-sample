kind: Deployment
apiVersion: apps/v1
metadata:
  annotations:
    image.openshift.io/triggers: >-
      [{"from":{"kind":"ImageStreamTag","name":"mysql:8.0-el8","namespace":"openshift"},"fieldPath":"spec.template.spec.containers[?(@.name==\"mysql\")].image"}]
  name: mysql
  namespace: order-app
  labels:
    app: mysql
    app.kubernetes.io/component: mysql
    app.kubernetes.io/instance: mysql
    app.kubernetes.io/part-of: order-app
    backstage.io/kubernetes-id: order-app
spec:
  replicas: 1
  selector:
    matchLabels:
      backstage.io/kubernetes-id: order-app
      deployment: mysql
  template:
    metadata:
      creationTimestamp: null
      labels:
        backstage.io/kubernetes-id: order-app
        deployment: mysql
    spec:
      containers:
        - name: mysql
          image: >-
            image-registry.openshift-image-registry.svc:5000/openshift/mysql:latest
          ports:
            - containerPort: 3306
              protocol: TCP
          env:
            - name: MYSQL_DATABASE
              value: testdb
            - name: MYSQL_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: my-secret
                  key: MYSQL_PASSWORD
            - name: MYSQL_USER
              valueFrom:
                secretKeyRef:
                  name: my-secret
                  key: MYSQL_USER
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          imagePullPolicy: IfNotPresent
      restartPolicy: Always
      terminationGracePeriodSeconds: 30
      dnsPolicy: ClusterFirst
      securityContext: {}
      schedulerName: default-scheduler
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 25%
      maxSurge: 25%
  revisionHistoryLimit: 10
  progressDeadlineSeconds: 600