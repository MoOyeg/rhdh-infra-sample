---
openapi: 3.0.3
servers:
  - url: http://order-app-order-app.apps.cluster2.sandbox1482.opentlc.com
info:
  title: order-app API
  version: 1.0.0-SNAPSHOT
paths:
  /entity/orders:
    get:
      tags:
      - Order Entity Resource
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/OrderEntity"
    post:
      tags:
      - Order Entity Resource
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/OrderEntity"
      responses:
        "200":
          description: OK
  /entity/orders/{id}:
    get:
      tags:
      - Order Entity Resource
      parameters:
      - name: id
        in: path
        required: true
        schema:
          format: int64
          type: integer
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OrderEntity"
    put:
      tags:
      - Order Entity Resource
      parameters:
      - name: id
        in: path
        required: true
        schema:
          format: int64
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Order"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OrderEntity"
    delete:
      tags:
      - Order Entity Resource
      parameters:
      - name: id
        in: path
        required: true
        schema:
          format: int64
          type: integer
      responses:
        "200":
          description: OK
  /repository/orders:
    get:
      tags:
      - Order Repository Resource
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Order"
    post:
      tags:
      - Order Repository Resource
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Order"
      responses:
        "200":
          description: OK
  /repository/orders/{id}:
    get:
      tags:
      - Order Repository Resource
      parameters:
      - name: id
        in: path
        required: true
        schema:
          format: int64
          type: integer
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Order"
    put:
      tags:
      - Order Repository Resource
      parameters:
      - name: id
        in: path
        required: true
        schema:
          format: int64
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Order"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Order"
    delete:
      tags:
      - Order Repository Resource
      parameters:
      - name: id
        in: path
        required: true
        schema:
          format: int64
          type: integer
      responses:
        "200":
          description: OK
        "422":
          description: "Id was invalidly set on request"
components:
  schemas:
    Order:
      type: object
      properties:
        id:
          format: int64
          type: integer
        name:
          type: string
        address:
          type: string
    OrderEntity:
      type: object
      properties:
        id:
          format: int64
          type: integer
        name:
          type: string
        address:
          type: string
