kind: ConfigMap
apiVersion: v1
metadata:
  name: app-config-rhdh
  namespace: ${NAMESPACE}
data:
  app-config-rhdh.yaml: |
    app:
      title: Red Hat Developer Hub - Test
      baseUrl: https://${BACKSTAGE_CR_NAME}-developer-hub-${NAMESPACE}.${BASEDOMAIN}

    backend:
      auth:
        keys:
          - secret: ${AUTH_SESSION_SECRET}
      baseUrl: https://${BACKSTAGE_CR_NAME}-developer-hub-${NAMESPACE}.${BASEDOMAIN}
      cors:
        origin: https://${BACKSTAGE_CR_NAME}-developer-hub-${NAMESPACE}.${BASEDOMAIN}

      reading:
        allow:
          - host: "*.$BASEDOMAIN"

    techdocs: 
      generator:
        runIn: local
      builder: local
      publisher:
        type: local
            
    permission:
      enabled: true
      rbac:
        admin:
          users:
            - name: user:default/backstage-admin
        policies-csv-file: /opt/app-root/src/rbac-policy.csv

    kubernetes:
      serviceLocatorMethod:
        type: 'multiTenant'
      clusterLocatorMethods:
        - type: 'config'
          clusters:
            - url: ${K8S_CLUSTER_URL} 
              name: ${K8S_CLUSTER_NAME}
              authProvider: 'serviceAccount' 
              skipTLSVerify: true # should be set to 'true' for self-signed certs
              serviceAccountToken: ${K8S_CLUSTER_TOKEN} 
              customResources: 
                - group: 'route.openshift.io'
                  apiVersion: 'v1'
                  plural: 'routes'
                - group: 'tekton.dev'
                  apiVersion: 'v1'
                  plural: 'pipelineruns'
                - group: 'tekton.dev'
                  apiVersion: 'v1'
                  plural: 'taskruns'
    
    signInPage: oidc
    catalog:
      rules:
        - allow: [Component, API, Location, Template, System, Resource, Group, User]
      providers:
        keycloakOrg:
          production:
            baseUrl: ${KEYCLOAK_BASE_URL}/auth
            loginRealm: ${KEYCLOAK_REALM}
            realm: ${KEYCLOAK_REALM}
            clientId: ${KEYCLOAK_CLIENT_ID}
            clientSecret: ${KEYCLOAK_CLIENT_SECRET}
            schedule:
              frequency: { seconds: 30 }
              timeout: { minutes: 3 }
              initialDelay: { seconds: 30 }

    auth:
      session:
        secret: ${AUTH_SESSION_SECRET}

      environment: production
      providers:
        oidc:
          production:
            clientId: ${KEYCLOAK_CLIENT_ID}
            clientSecret: ${KEYCLOAK_CLIENT_SECRET}
            metadataUrl: ${KEYCLOAK_BASE_URL}/auth/realms/${KEYCLOAK_REALM}/.well-known/openid-configuration
            prompt: auto